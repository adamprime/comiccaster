// functions/generate-token.js
const { v4: uuidv4 } = require('uuid');
const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

exports.handler = async function(event, context) {
  // Only allow POST requests
  if (event.httpMethod !== 'POST') {
    return {
      statusCode: 405,
      body: 'Method Not Allowed'
    };
  }
  
  try {
    // Parse the request body
    const body = JSON.parse(event.body);
    const selectedComics = body.comics;
    
    if (!selectedComics || !Array.isArray(selectedComics) || selectedComics.length === 0) {
      return {
        statusCode: 400,
        body: JSON.stringify({ error: 'No comics selected' })
      };
    }
    
    // Generate a unique token
    const token = uuidv4();
    
    // Create token data
    const tokenData = {
      comics: selectedComics,
      created_at: new Date().toISOString()
    };
    
    // Write token data to a file
    const tokenPath = path.join(__dirname, '..', 'tokens', `${token}.json`);
    fs.writeFileSync(tokenPath, JSON.stringify(tokenData, null, 2));
    
    // Commit and push the token file
    try {
      execSync(`git add ${tokenPath}`);
      execSync(`git commit -m "Add token ${token}"`);
      execSync('git push');
    } catch (error) {
      console.error('Error committing token:', error);
      // Continue even if git operations fail
    }
    
    // Return the token
    return {
      statusCode: 200,
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        token,
        feed_url: `https://your-site-name.netlify.app/.netlify/functions/combined-feed?token=${token}`
      })
    };
  } catch (error) {
    return {
      statusCode: 500,
      body: JSON.stringify({ error: error.message })
    };
  }
};