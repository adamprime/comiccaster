<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ComicCaster - RSS Feeds for Comics</title>
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="{{ url_for('static', filename='favicon.svg') }}">
    <link rel="alternate icon" type="image/x-icon" href="{{ url_for('static', filename='favicon.ico') }}">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        .comic-list {
            max-height: 60vh;
            overflow-y: auto;
        }
        .tooltip {
            display: none;
            position: absolute;
            background-color: #333;
            color: white;
            padding: 5px 10px;
            border-radius: 4px;
            z-index: 100;
            font-size: 12px;
            top: -30px;
            left: 50%;
            transform: translateX(-50%);
        }
        .copy-btn:hover .tooltip {
            display: block;
        }
    </style>
</head>
<body class="bg-gray-100">
    <div class="container mx-auto px-4 py-8">
        <header class="text-center mb-8">
            <h1 class="text-4xl font-bold text-gray-800 mb-2">ComicCaster</h1>
            <p class="text-xl text-gray-600 mb-4">RSS Feeds for Your Favorite Comics</p>
            <p class="text-md text-gray-600">Browse the list of available comics, copy individual RSS feed URLs, or create an OPML file with multiple comics.</p>
        </header>

        <div class="bg-white rounded-lg shadow-md p-6 mb-8">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-2xl font-semibold text-gray-800">Available Comics</h2>
                <div class="relative">
                    <input type="text" id="search-input" placeholder="Search comics..." 
                           class="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
            </div>

            <div class="comic-list overflow-y-auto border border-gray-200 rounded-md">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50 sticky top-0">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-10">
                                <input type="checkbox" id="select-all" class="h-4 w-4 text-blue-600 rounded">
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Comic Name
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Author
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                RSS Feed
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Source
                            </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200" id="comics-table-body">
                        {% for comic in comics %}
                        <tr class="comic-row hover:bg-gray-50">
                            <td class="px-6 py-4 whitespace-nowrap">
                                <input type="checkbox" name="selected-comics" value="{{ comic.slug }}" class="comic-checkbox h-4 w-4 text-blue-600 rounded">
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm font-medium text-gray-900">{{ comic.name }}</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-500">{{ comic.author }}</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center space-x-2">
                                    <a href="{{ request.url_root }}feeds/{{ comic.slug }}.xml" 
                                       class="text-blue-600 hover:text-blue-800 hover:underline text-sm truncate copy-url cursor-pointer"
                                       data-feed-url="{{ request.url_root }}feeds/{{ comic.slug }}.xml"
                                       target="_blank"
                                       title="Click to copy: {{ request.url_root }}feeds/{{ comic.slug }}.xml">
                                        {{ request.url_root }}feeds/{{ comic.slug }}.xml
                                    </a>
                                    <div class="relative copy-btn">
                                        <button class="copy-feed-btn inline-flex items-center px-2 py-1 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200 text-sm"
                                                data-feed-url="{{ request.url_root }}feeds/{{ comic.slug }}.xml">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"/>
                                            </svg>
                                            <span class="tooltip">Copy RSS feed URL</span>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <a href="{{ comic.url }}" 
                                   target="_blank"
                                   class="inline-flex items-center px-3 py-1 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-100 transition-colors duration-200 text-sm">
                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                                    </svg>
                                    View Comic
                                </a>
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>

        <div class="bg-white rounded-lg shadow-md p-6 mb-8">
            <h2 class="text-2xl font-semibold text-gray-800 mb-4">Export Selected Comics</h2>
            <p class="text-md text-gray-600 mb-4">
                Select comics from the list above and click the button below to generate an OPML file. 
                This file can be imported into most RSS readers to subscribe to multiple comics at once.
            </p>
            <div class="flex justify-between items-center">
                <div>
                    <span id="selected-count" class="text-lg font-medium text-gray-700">0</span> comics selected
                </div>
                <button id="generate-opml" class="px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed">
                    Generate OPML File
                </button>
            </div>
        </div>

       <footer class="mt-8 text-center text-gray-600">
            <p>Made with ❤️ by <a href="https://github.com/adamprime/comiccaster" class="text-blue-500 hover:text-blue-600">ComicCaster</a></p>
        </footer>
    </div>

    <form id="opml-form" action="/generate-opml" method="POST" class="hidden" id="comics-form">
        <!-- Individual comics will be added here dynamically -->
    </form>

    <script>
        // Search functionality
        const searchInput = document.getElementById('search-input');
        const comicRows = document.querySelectorAll('.comic-row');
        
        searchInput.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            
            comicRows.forEach(row => {
                const comicName = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                const authorName = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
                
                if (comicName.includes(searchTerm) || authorName.includes(searchTerm)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });

        // Copy RSS feed URL functionality
        const copyButtons = document.querySelectorAll('.copy-feed-btn');
        const copyUrls = document.querySelectorAll('.copy-url');
        
        function copyToClipboard(feedUrl, element) {
            navigator.clipboard.writeText(feedUrl).then(() => {
                const tooltip = element.querySelector('.tooltip');
                if (tooltip) {
                    tooltip.textContent = 'Copied!';
                    setTimeout(() => {
                        tooltip.textContent = 'Copy RSS feed URL';
                    }, 2000);
                }
            });
        }
        
        copyButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const feedUrl = this.getAttribute('data-feed-url');
                copyToClipboard(feedUrl, this);
            });
        });
        
        copyUrls.forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                const feedUrl = this.getAttribute('data-feed-url');
                copyToClipboard(feedUrl, this.parentNode);
                
                // Add visual feedback
                const originalColor = this.style.color;
                this.textContent = 'Copied!';
                this.style.color = '#22c55e'; // Green color
                
                setTimeout(() => {
                    this.textContent = feedUrl;
                    this.style.color = originalColor;
                }, 1000);
            });
        });

        // Select all functionality
        const selectAllCheckbox = document.getElementById('select-all');
        const comicCheckboxes = document.querySelectorAll('.comic-checkbox');
        const selectedCountElement = document.getElementById('selected-count');
        
        selectAllCheckbox.addEventListener('change', function() {
            comicCheckboxes.forEach(checkbox => {
                if (checkbox.closest('tr').style.display !== 'none') {
                    checkbox.checked = this.checked;
                }
            });
            updateSelectedCount();
        });
        
        comicCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', updateSelectedCount);
        });
        
        function updateSelectedCount() {
            const selectedCount = document.querySelectorAll('.comic-checkbox:checked').length;
            selectedCountElement.textContent = selectedCount;
            
            const generateButton = document.getElementById('generate-opml');
            generateButton.disabled = selectedCount === 0;
        }

        // Generate OPML functionality
        const generateButton = document.getElementById('generate-opml');
        const opmlForm = document.getElementById('opml-form');
        
        generateButton.addEventListener('click', function() {
            const selectedComics = Array.from(document.querySelectorAll('.comic-checkbox:checked'))
                .map(checkbox => checkbox.value);
            
            if (selectedComics.length === 0) {
                return;
            }
            
            // Clear any existing inputs
            opmlForm.innerHTML = '';
            
            // Add each selected comic as a separate input field
            selectedComics.forEach(comicSlug => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'comics';
                input.value = comicSlug;
                opmlForm.appendChild(input);
            });
            
            opmlForm.submit();
        });

        // Initialize selected count
        updateSelectedCount();
    </script>
</body>
</html> 