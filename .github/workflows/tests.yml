name: Tests

on:
  push:
    branches: [ main, test-branch-protection ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
      fail-fast: false  # Continue with other versions even if one fails

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup Chrome
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable

    - name: Setup ChromeDriver
      run: |
        # Install ChromeDriver using ChromeDriver manager
        pip install webdriver-manager
        # The webdriver-manager will handle downloading the correct ChromeDriver version
        python -c "from webdriver_manager.chrome import ChromeDriverManager; print(ChromeDriverManager().install())"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install package with test dependencies
        pip install -e ".[dev]"
        
    - name: Run tests with pytest
      continue-on-error: true  # Continue to show output even if tests fail
      env:
        PYTHONPATH: ${{ github.workspace }}
        CHROME_BIN: google-chrome
        # Let Selenium use webdriver-manager to find ChromeDriver
        USE_WEBDRIVER_MANAGER: "true"
      run: |
        # Print versions for debugging
        google-chrome --version
        python -m pytest -v --cov=comiccaster --cov-report=xml --no-cov-on-fail
        
    - name: Upload coverage to Codecov
      if: success()
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true 